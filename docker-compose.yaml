services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: "npm run start:dev"
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app # Mount the local backend folder to /app in the container
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: ${DB_HOST}         # Make sure this is set correctly
      DB_PORT: ${DB_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db

  frontend:
    # Use the Dockerfile in the current directory to build the image
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: "npm run dev"
    # Define environment variables (optional)
    environment:
      NODE_ENV: "development"
      WATCHPACK_POLLING: true
      CHOKIDAR_USEPOLLING: true
      APPLICATION_PORT: "3000"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app # Mount the local frontend folder to /app in the container
    depends_on:
      - backend

  db:
    container_name: meals_app
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d meals_app_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure
volumes:
  db_data: